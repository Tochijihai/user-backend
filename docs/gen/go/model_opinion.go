/*
 * Tochijihai User API
 *
 * 都知事杯のユーザー向けAPIです。
 *
 * API version: 0.1.9
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"time"
	"errors"
)



type Opinion struct {

	// 投稿を識別するid
	OpinionId string `json:"opinionId"`

	// 投稿ユーザーの名前
	UserName string `json:"userName"`

	Coordinate OpinionRequestCoordinate `json:"coordinate"`

	// 投稿内容
	Opinion string `json:"opinion"`

	// 投稿日時
	CreatedDataTime time.Time `json:"createdDataTime"`

	// リアクション数
	ReactionCount int32 `json:"reactionCount,omitempty"`

	// 自分がリアクション済かどうか
	IsReactioned bool `json:"isReactioned,omitempty"`

	// コメント一覧
	Comments []OpinionCommentsInner `json:"comments,omitempty"`
}

// AssertOpinionRequired checks if the required fields are not zero-ed
func AssertOpinionRequired(obj Opinion) error {
	elements := map[string]interface{}{
		"opinionId": obj.OpinionId,
		"userName": obj.UserName,
		"coordinate": obj.Coordinate,
		"opinion": obj.Opinion,
		"createdDataTime": obj.CreatedDataTime,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertOpinionRequestCoordinateRequired(obj.Coordinate); err != nil {
		return err
	}
	for _, el := range obj.Comments {
		if err := AssertOpinionCommentsInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertOpinionConstraints checks if the values respects the defined constraints
func AssertOpinionConstraints(obj Opinion) error {
	if obj.ReactionCount < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
